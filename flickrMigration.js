const request = require('request');
const _ = require('underscore');
const async = require('async');
const fs = require('fs');

function flickr(method, id, callback) {
    const url = "https://api.flickr.com/services/rest/" + 
        "?method=flickr.photos." + method +
        "&photo_id=" + id +
        "&format=json" +
        "&api_key=b1734bd76001217414b2fbdde16cda7c" +
        "&nojsoncallback=1";
    const res = request(url, (error, res, body) => {
        callback(error, JSON.parse(body));
    });
}

function suffix(url) {
    const parts = url.split('.');
    return parts[parts.length-1];
}

function getFlickrData(id, callback) {
    console.log('Processing ' + id);
    flickr('getSizes', id, (err, data) => {
        if (err) {
            callback(err);
        }

        const thumb = _.where(data.sizes.size, { "label":"Large Square" } )[0].source;
        const standard = _.where(data.sizes.size, { "label":"Medium 640"} )[0].source;

        const localThumb = 'photos/' + id + '_thumb.' + suffix(thumb);
        const localStandard = 'photos/' + id + '.' + suffix(thumb);

        console.log('Downloading thumbnail image ' + thumb);
        request(thumb).pipe(fs.createWriteStream(localThumb));

        console.log('Downloading standard image ' + standard);
        request(standard).pipe(fs.createWriteStream(localStandard));

        flickr('getInfo', id, (err, data) => {
            if (err) {
                callback(err);
            }
            
            const title = data.photo.title._content;
            const description = data.photo.description._content;

            console.log('Found metadata for ' + title);
            callback(null, { id, thumb, standard, localThumb, localStandard, title, description });
        });
    });
};

const flickrIds = [ 908150461,1123548959,1124387490,1198122404,1124398086,1123562987,1198104410,1197274385,7154368366, 7154355142,7154364070,7359691578,7174462011,
    6869555313, 6869555639, 6869555551, 6869555433,
    2321623875,2321627125,2322454680,2321643553,2322462720,2321653377,2453151848,2452324951,2453154652,2654637239,2654638803,2655467236,2655477344,13963054346,
    2740443779,2740444901,2740445783,2741283242,2740447391,3426043043,3426854590,3426044687,3426045393,3426045947,
    2655469374, 2740448481,2741286656,2740457719,3426851926,3426041991,13982986751,
    6869288837, 6869288175, 6869288083, 6869288001, 13723531843,
    908198695,909063652,1197042103,1197945504,1197095859,2452313595,
    1130781103,868707741,868702373,868721373,868726771,1123570337,
    868710601,869564152,869579454,
    868713571,
    2452312953,2452317455,2453150530,
    6870784953, 6869556157, 6869556457, 6869556783, 6869557041, 7728041870,
    5031430614,5031457648,
    473690338,473691160,473691850,473694588,473695298,473700296,473700922,2322475434,869509992,
    7338243042,7338233414,7338224898,7338214236,
    869515620,868672101,2452327373,2453156270,2452328989,
    2654648525,2655468518,
    7657940926,7657937624,7657933230,13982963261,14006138343,
    473705475,473706251,473693830,473708823,473709629,473697414,473710851,473698560,473699096,473699676,473701616,473714955,473715539,473703020,473716805,473704470,473705436,2452311731,
    5849861171,5849863941,5849866563,5850422952,7174462011,7359691578,
    3613875819,3613876889,
    6869275647, 6869275739, 6869275837, 6869275909, 6871800115, 6871800017,
    6869555761,
    6869286081, 6869288555,
    113085690,
    473698560,473699096,
    9433192386, 13703049735, 13703071153, 13703408234, 13703411774,
    875399278,875402374,875406434,875410378,874567121,874578521,874581841,874586343,874591189,874609239,875476924,918515625,919371402,919400552,918568909,919435174,919444900,919458642,
    2428236819,2429050740,2429051958,2428242463,2428244373,2428245791,2428246973,2428248713,2428250091,2429065394,
    2453146768,2453148150,2452321071,2452314611,2452315531,
    2655470682,2655471928,2654646885,2654649999,
    7425184558,
    872278971, 1197184157, 1197207203,
    2413795589,14006178323,2414622198,2414626950,
    13986147395,13986151075,
    3426045393,3426045947,3426851926,2453154652,2654638803,2655467236,2321643553,2655477344,
    7359693154,13986618774,14006166173,
    13982990321,
    7359686260,
    6872258467,
    873164752,872317827,872323227,872328627,1197997036,2322445810,2322448198,2322449974,
    2549811676,
    2548994345,
    2655469374,
    6872259095,6872258947,6872258773,6872258619,
    6869287661,
    908232043, 919256214, 918422863, 919282926,
    873117728,872272671,872286151,873151304,872308327,872328627,873186034,873192068,908139379,942878611,
    5031451480,5030847113,5031479750,
    7311105220,7311106914,7311108940,
    13963050706,
    2135327994,2134548681,2135329156,2452316503,
    6869289155, 6869289299,
    869440238,869442444,869450138,868608095,868611555,869460986,868619567,869468706,868625595,868628757,868631825,869480788,869483822,869486856,868645103,868648593,868652713,869501674,869506148,868675191,869512770,
    869515620,868672101,2452327373,2453156270,2452328989,
    3613875819,3613876889,
    113085690,277725407,465952912,465979178,875476924,2414637524,2414639068,3846100731,2414640016,2413815655,5850403190,5850410124,5849872137,5031382834,7639029608
 ];

let images = {};

async.map(flickrIds, getFlickrData, function(err, results){
    fs.writeFileSync('photos/data.json', JSON.stringify(results));
});

